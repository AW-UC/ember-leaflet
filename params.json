{"name":"ember-leaflet","tagline":"Ember + Leaflet = Fun with maps","body":"# EmberLeaflet [![Build Status](https://secure.travis-ci.org/gabesmed/ember-leaflet.png?branch=master)](http://travis-ci.org/gabesmed/ember-leaflet)\r\n\r\n## Ember + Leaflet = Fun with maps!\r\n\r\nEmberLeaflet aims to make working with Leaflet layers in your Ember app as **easy, declarative and composable** as Ember's View classes make working with DOM elements.\r\n\r\nWherever possible, the design is analogous to Ember's View, CollectionView and ContainerView architecture. EmberLeaflet provides functionality for maps, tile layers, markers, polylines and geometry, and popups. It provides hooks wherever possible for easy extensibility into more custom Leaflet behavior.\r\n\r\n## Usage\r\n\r\nA simple map in Ember - only one line of code!\r\n\r\n``` javascript\r\nApp.MapView = EmberLeaflet.MapView.extend({});\r\n```\r\n\r\nSpecify center, zoom and options:\r\n\r\n``` javascript\r\nApp.MapView = EmberLeaflet.MapView.extend({\r\n    center: L.latLng(40.713282, -74.006978),\r\n    zoom: 18,\r\n    options: {maxZoom: 19, minZoom: 0}    \r\n});\r\n```\r\n\r\nCustomize tiles:\r\n\r\n``` javascript\r\nApp.TileLayer = EmberLeaflet.TileLayer.extend({\r\n    tileUrl: 'http://{s}.tile.cloudmade.com/{key}/{styleId}/256/{z}/{x}/{y}.png',\r\n    options: {key: 'API-key', styleId: 997}\r\n});\r\n\r\nApp.MapView = EmberLeaflet.MapView.extend({\r\n    childLayers: [App.TileLayer]\r\n});\r\n```\r\n\r\nAdd some markers:\r\n\r\n``` javascript\r\nApp.MarkerCollectionLayer = EmberLeaflet.MarkerCollectionLayer.extend({\r\n    content: [\r\n        {location: L.latLng(40.713282, -74.006978)},\r\n        {location: L.latLng(40.713465, -74.006753)},\r\n        {location: L.latLng(40.713873, -74.006404)}]\r\n});\r\n\r\nApp.MapWithMarkersView = EmberLeaflet.MapView.extend({\r\n    childLayers: [\r\n        App.TileLayer,\r\n        App.MarkerCollectionLayer]\r\n});\r\n```\r\n\r\nBind to a controller, and markers are added, removed, and moved based on their content binding.\r\n\r\n``` javascript\r\nApp.MarkerCollectionLayer = EmberLeaflet.MarkerCollectionLayer.extend({\r\n    contentBinding: 'controller'\r\n});\r\n\r\nApp.MapWithBoundMarkersView = EmberLeaflet.MapView.extend({\r\n    childLayers: [\r\n        App.TileLayer,\r\n        App.MarkerCollectionLayer]\r\n});\r\n\r\nApp.MapWithBoundMarkersController = Ember.ArrayController.extend({\r\n    content: [\r\n        {location: L.latLng(40.713282, -74.006978)},\r\n        {location: L.latLng(40.713465, -74.006753)},\r\n        {location: L.latLng(40.713873, -74.006404)}]\r\n});\r\n```\r\n\r\nAdd functionality to marker class with mixins.\r\n\r\n``` javascript\r\nApp.DraggableMarker = EmberLeaflet.MarkerLayer.extend(\r\n    EmberLeaflet.DraggableMixin, {});\r\n\r\nApp.MarkerWithPopup = EmberLeaflet.MarkerLayer.extend(\r\n        EmberLeaflet.PopupMixin, {\r\n    popupContent: Ember.computed.alias('content.title'),\r\n    popupOptions: {offset: L.point(0, -36)}\r\n});\r\n```\r\n\r\nCustomizing marker class:\r\n\r\n``` javascript\r\nApp.MarkerLayer = EmberLeaflet.MarkerLayer.extend({\r\n    icon: L.DivIcon.extend({\r\n        iconSize: [40, 40]\r\n    }),\r\n    options: function() {\r\n        return {\r\n            html: this.get('content.title'),\r\n            icon: this.get('icon')\r\n        };\r\n    }.property()\r\n});\r\n\r\nApp.TitledMarkerCollectionLayer = EmberLeaflet.MarkerCollectionLayer.extend({\r\n    content: [\r\n        {location: L.latLng(40.713282, -74.006978), title: 'Gas'},\r\n        {location: L.latLng(40.713465, -74.006753), title: 'Caf√©'},\r\n        {location: L.latLng(40.713873, -74.006404), title: 'ATM'}],\r\n    itemLayerClass: App.MarkerLayer\r\n});\r\n```\r\n\r\nCreate your own tile layers:\r\n\r\n``` javascript\r\nApp.TileLayer = EmberLeaflet.Layer.extend({\r\n    _newLayer: function() {\r\n        return L.TileJSON.createTileLayer(myTileJson);\r\n    }  \r\n});\r\n```\r\n\r\nIncorporate other leaflet layer classes:\r\n\r\n``` javascript\r\nApp.MarkerClusterLayer = EmberLeaflet.Layer.extend({\r\n    options: {disableClusteringAtZoom: 16, showCoverageOnHover: false},\r\n    childLayers: [App.MarkerCollectionLayer],\r\n    _newLayer: function() {\r\n        return new L.MarkerClusterGroup(this.get('options'));\r\n    }\r\n});\r\n\r\nApp.MapWithClusteredMarkersView = EmberLeaflet.MapView.extend({\r\n    childLayers: [\r\n        App.TileLayer,\r\n        App.MarkerClusterLayer]\r\n});\r\n```\r\n\r\n## Build It\r\n\r\n1. `git clone https://github.com/gabesmed/ember-leaflet.git`\r\n2. `bundle`\r\n3. `bundle exec rake dist`\r\n4. `cp dist/modules/ember-leaflet.js myapp/`\r\n\r\n## Running unit tests\r\n\r\nRun ```bundle exec rackup``` and open [http://localhost:9292](http://localhost:9292) in a browser.\r\n\r\n## Thanks\r\n\r\n* Thanks to the contributors to [emberjs/list-view](https://github.com/emberjs/list-view), from whom I cribbed this project skeleton.\r\n* Thanks to everyone who makes Ember a joy to work with!\r\n* Thanks to the makers of Leaflet, hooray for maps!\r\n* Thanks to `miguelcobain`, whose [ember-leaflet library](https://github.com/miguelcobain/ember-leaflet) was the inspiration to polish and publish this one.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}